<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs on Comparator Verifier</title><link>https://tomregan.github.io/comparatorverifier/pl/docs/</link><description>Recent content in Docs on Comparator Verifier</description><generator>Hugo</generator><language>pl</language><atom:link href="https://tomregan.github.io/comparatorverifier/pl/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Opcje konfiguracji</title><link>https://tomregan.github.io/comparatorverifier/pl/docs/configuration-options/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tomregan.github.io/comparatorverifier/pl/docs/configuration-options/</guid><description>Opcje konfiguracji # Opcje mogą być ustawiane za pomocą płynnego API (fluent API). Niektóre opcje są również dostępne do ustawienia w pliku comparator-verifier.properties, który powinien znajdować się na ścieżce testowej, np. w src/test/resources. Używanie API ustawia wartości dla każdego testu z osobna, podczas gdy konfiguracja w pliku właściwości zapewnia wartość domyślną dla wszystkich testów. Wartości ustawione za pomocą API nadpisują wartości z pliku właściwości.
withExamples(T first, T second, T... rest) # Dostarcza jawnych przykładów do weryfikacji.</description></item><item><title>Wyjaśnienie ostrzeżeń</title><link>https://tomregan.github.io/comparatorverifier/pl/docs/warnings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tomregan.github.io/comparatorverifier/pl/docs/warnings/</guid><description>Wyjaśnienie ostrzeżeń # Ta strona przedstawia różne ostrzeżenia, które mogą pojawić się podczas weryfikacji poprawności implementacji Comparatora. Każde ostrzeżenie odpowiada konkretnej właściwości umownej, którą dobrze zaimplementowany comparator powinien spełniać.
ANTI_SYMMETRY # Comparator narusza zasadę antysymetrii, jeśli zwraca niespójne wyniki, gdy kolejność jego argumentów zostanie odwrócona. Konkretnie, dla dowolnych obiektów x i y, jeśli compare(x, y) &amp;lt; 0, to compare(y, x) powinno zwrócić wartość większą od 0.
CONSISTENCY # Comparator jest niespójny, jeśli przy wielokrotnym porównywaniu tej samej pary obiektów (przy założeniu, że obiekty nie uległy zmianie) zwraca różne wyniki.</description></item></channel></rss>